#################################################
#
#   i18n
#
#################################################

- id: dir_attribute
  name: |
    `dir` attribute

- id: lang_attribute
  name: |
    `lang` attribute

- id: ruby_rp_rt_elements
  name: |
    `<ruby>` , `<rp>` , `<rt>` elements

- id: intl_datetimeformat
  name: |
    `Intl.DateTimeFormat` API
  description: |
    Date/time formatting. Implicitly called by `Date.prototype.toLocaleString(lang, options)`.
  mdn: en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat

- id: intl_collator
  name: |
    `Intl.Collator` API
  description: |
    String comparison. Implicitly called by `String.prototype.localeCompare(lang, options)`.
  mdn: en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator

- id: intl_listformat
  name: |
    `Intl.ListFormat` API
  description: |
    List formatting. Implicitly called by `Array.prototype.toLocaleString(lang, options)`.
  mdn: en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat

- id: intl_numberformat
  name: |
    `Intl.NumberFormat`  API
  description: |
    Number formatting. Implicitly called by `Number.prototype.toLocaleString(lang, options)`.
  mdn: en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat

- id: intl_pluralrules
  name: |
    `Intl.PluralRules` API
  description: |
    Facilitates language-sensitive pluralization rules.

- id: intl_relative_time_format
  name: |
    `Intl.RelativeTimeFormat` API
  description: |
    Facilitates localization of relative time offsets.
  mdn: en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat

- id: intl_segmenter
  webFeaturesId: intl-segmenter
  name: |
    `Intl.Segmenter` API
  description: |
    Language-sensitive segmentation of text into graphemes, words or sentences.
  mdn: en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter
  example:
    language: js
    code: |
      const segmenterFr = new Intl.Segmenter("fr", { granularity: "word" });
      const string1 = "Que ma joie demeure";

      const iterator1 = segmenterFr.segment(string1)[Symbol.iterator]();

      console.log(iterator1.next().value.segment);
      // Expected output: 'Que'

      console.log(iterator1.next().value.segment);
      // Expected output: ' '

- id: intl_messageformat
  name: |
    `Intl.MessageFormat` API
  description: |
    Proposal for a JS API to handle localizable strings with variable interpolation. Polyfill-only.
  resources:
    - url: https://github.com/tc39/proposal-intl-messageformat
      title: Intl.MessageFormat proposal (Stage 1)

- id: intl_localematcher
  name: |
    `Intl.LocaleMatcher` API
  description: |
    Proposal for a JS API to explose and customize locale matching. Polyfill-only.
  resources:
    - url: https://github.com/tc39/proposal-intl-localematcher
      title: Intl.LocaleMatcher proposal (Stage 1)

- id: writing_modes_property
  name: |
    `writing-mode` CSS property

- id: direction_property
  name: |
    `direction` CSS property

- id: intl_locale
  webFeaturesId: intl-locale
  name: |
    `Intl.Locale` API
  description: |
    The `Intl.Locale` API parses Unicode locale identifiers, with language, region, and script codes, such as `zh-Hans-CN` or `en-GB`.
  mdn: en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale
  example:
    language: js
    code: |
      const us = new Intl.Locale("en-US");
